Chart:
  AppVersion: 5.2.1
  Name: jupyterhub
  Version: 4.1.0
Release:
  Name: jh-errors
  Namespace: halamka-ns
  Service: Helm
cull:
  adminUsers: true
  concurrency: 10
  enabled: false
  every: 600
  maxAge: 0
  removeNamedServers: false
  timeout: 1800
  users: false
custom: {}
debug:
  enabled: true
fullnameOverride: ""
global:
  safeToShowValues: false
hub:
  activeServerLimit: null
  allowNamedServers: true
  annotations: {}
  args:
  - infinity
  authenticatePrometheus: null
  baseUrl: /
  command:
  - sleep
  concurrentSpawnLimit: 64
  config:
    Authenticator:
      admin_users:
      - user1
      - user2
      allowed_users:
      - user3
      - user4
    DummyAuthenticator:
      password: zdlhavyproces
    JupyterHub:
      admin_access: true
      authenticator_class: dummy
  consecutiveFailureLimit: 0
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    runAsGroup: 1000
    runAsUser: 1000
  cookieSecret: null
  db:
    password: null
    pvc:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      selector: {}
      storage: 1Gi
      storageClassName: nfs-csi
      subPath: null
    type: sqlite-pvc
    upgrade: null
    url: null
  deploymentStrategy:
    type: Recreate
  existingSecret: null
  extraConfig:
    01-extra-config: |
      c.KubeSpawner.container_security_context = {"capabilities": {"drop": ["ALL"]}, "runAsGroup": 1000, "runAsUser": 1000}
  extraContainers: []
  extraEnv: {}
  extraFiles: {}
  extraPodSpec: {}
  extraVolumeMounts:
  - mountPath: /mnt
    name: jh-errors
  extraVolumes:
  - name: jh-errors
    persistentVolumeClaim:
      claimName: jh-errors-pvc
  image:
    name: docker.io/mhalamk/cerit-jupyterhub-custom
    pullPolicy: null
    pullSecrets: []
    tag: 05-03-2025
  initContainers: []
  labels: {}
  lifecycle: {}
  livenessProbe:
    enabled: false
    failureThreshold: 10
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
  loadRoles: {}
  namedServerLimitPerUser: 5
  networkPolicy:
    allowedIngressPorts: []
    egress: []
    egressAllowRules:
      cloudMetadataServer: true
      dnsPortsCloudMetadataServer: true
      dnsPortsKubeSystemNamespace: true
      dnsPortsPrivateIPs: true
      nonPrivateIPs: true
      privateIPs: true
    enabled: false
    ingress: []
    interNamespaceAccessLabels: ignore
  nodeSelector: {}
  pdb:
    enabled: false
    maxUnavailable: null
    minAvailable: 1
  podSecurityContext:
    fsGroup: 2000
    fsGroupChangePolicy: OnRootMismatch
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  readinessProbe:
    enabled: false
    failureThreshold: 10
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
  redirectToServer: null
  resources: {}
  revisionHistoryLimit: null
  service:
    annotations: {}
    extraPorts: []
    loadBalancerIP: null
    ports:
      appProtocol: null
      nodePort: null
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: true
    name: null
  services: {}
  shutdownOnLogout: null
  templatePaths: []
  templateVars: {}
  tolerations: []
imagePullSecret:
  automaticReferenceInjection: true
  create: false
  email: null
  password: null
  registry: null
  username: null
imagePullSecrets: []
ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  enabled: true
  extraPaths: []
  hosts:
  - jh-error.dyn.cloud.e-infra.cz
  ingressClassName: null
  pathSuffix: null
  pathType: Prefix
  tls:
  - hosts:
    - jh-error.dyn.cloud.e-infra.cz
    secretName: jh-error-dyn-cloud-e-infra-cz-tls
prePuller:
  annotations: {}
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  continuous:
    enabled: false
    serviceAccount:
      annotations: {}
      create: true
      name: null
  extraImages: {}
  extraTolerations: []
  hook:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    enabled: false
    image:
      name: quay.io/jupyterhub/k8s-image-awaiter
      pullPolicy: null
      pullSecrets: []
      tag: 4.1.0
    nodeSelector: {}
    podSchedulingWaitDuration: 10
    pullOnlyOnChanges: true
    resources: {}
    serviceAccount:
      annotations: {}
      create: true
      name: null
    serviceAccountImagePuller:
      annotations: {}
      create: true
      name: null
    tolerations: []
  labels: {}
  pause:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    image:
      name: registry.k8s.io/pause
      pullPolicy: null
      pullSecrets: []
      tag: "3.10"
  pullProfileListImages: true
  resources: {}
  revisionHistoryLimit: null
proxy:
  annotations: {}
  chp:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    defaultTarget: null
    errorTarget: null
    extraCommandLineFlags: []
    extraEnv: {}
    extraPodSpec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
    image:
      name: quay.io/jupyterhub/configurable-http-proxy
      pullPolicy: null
      pullSecrets: []
      tag: 4.6.3
    livenessProbe:
      enabled: true
      failureThreshold: 30
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 3
    networkPolicy:
      allowedIngressPorts:
      - http
      - https
      egress: []
      egressAllowRules:
        cloudMetadataServer: true
        dnsPortsCloudMetadataServer: true
        dnsPortsKubeSystemNamespace: true
        dnsPortsPrivateIPs: true
        nonPrivateIPs: true
        privateIPs: true
      enabled: false
      ingress: []
      interNamespaceAccessLabels: ignore
    nodeSelector: {}
    pdb:
      enabled: false
      maxUnavailable: null
      minAvailable: 1
    readinessProbe:
      enabled: true
      failureThreshold: 1000
      initialDelaySeconds: 0
      periodSeconds: 2
      timeoutSeconds: 1
    resources:
      limits:
        cpu: 1
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    revisionHistoryLimit: null
    tolerations: []
  deploymentStrategy:
    rollingUpdate: null
    type: Recreate
  https:
    enabled: false
    hosts: []
    letsencrypt:
      acmeServer: https://acme-v02.api.letsencrypt.org/directory
      contactEmail: null
    manual:
      cert: null
      key: null
    secret:
      crt: tls.crt
      key: tls.key
      name: null
    type: letsencrypt
  labels: {}
  secretSync:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    image:
      name: quay.io/jupyterhub/k8s-secret-sync
      pullPolicy: null
      pullSecrets: []
      tag: 4.1.0
    resources: {}
  secretToken: null
  service:
    annotations: {}
    disableHttpPort: false
    extraPorts: []
    labels: {}
    loadBalancerIP: null
    loadBalancerSourceRanges: []
    nodePorts:
      http: null
      https: null
    type: ClusterIP
  traefik:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    extraDynamicConfig: {}
    extraEnv: {}
    extraInitContainers: []
    extraPodSpec: {}
    extraPorts: []
    extraStaticConfig: {}
    extraVolumeMounts: []
    extraVolumes: []
    hsts:
      includeSubdomains: false
      maxAge: 15724800
      preload: false
    image:
      name: traefik
      pullPolicy: null
      pullSecrets: []
      tag: v3.3.1
    labels: {}
    networkPolicy:
      allowedIngressPorts:
      - http
      - https
      egress: []
      egressAllowRules:
        cloudMetadataServer: true
        dnsPortsCloudMetadataServer: true
        dnsPortsKubeSystemNamespace: true
        dnsPortsPrivateIPs: true
        nonPrivateIPs: true
        privateIPs: true
      enabled: true
      ingress: []
      interNamespaceAccessLabels: ignore
    nodeSelector: {}
    pdb:
      enabled: false
      maxUnavailable: null
      minAvailable: 1
    resources: {}
    revisionHistoryLimit: null
    serviceAccount:
      annotations: {}
      create: true
      name: null
    tolerations: []
rbac:
  create: true
scheduling:
  corePods:
    nodeAffinity:
      matchNodePurpose: prefer
    tolerations:
    - effect: NoSchedule
      key: hub.jupyter.org/dedicated
      operator: Equal
      value: core
    - effect: NoSchedule
      key: hub.jupyter.org_dedicated
      operator: Equal
      value: core
  podPriority:
    defaultPriority: 0
    enabled: false
    globalDefault: false
    imagePullerPriority: -5
    userPlaceholderPriority: -10
  userPlaceholder:
    annotations: {}
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    enabled: false
    extraPodSpec: {}
    image:
      name: registry.k8s.io/pause
      pullPolicy: null
      pullSecrets: []
      tag: "3.10"
    labels: {}
    replicas: 0
    resources: {}
    revisionHistoryLimit: null
  userPods:
    nodeAffinity:
      matchNodePurpose: prefer
    tolerations:
    - effect: NoSchedule
      key: hub.jupyter.org/dedicated
      operator: Equal
      value: user
    - effect: NoSchedule
      key: hub.jupyter.org_dedicated
      operator: Equal
      value: user
  userScheduler:
    annotations: {}
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    enabled: false
    extraPodSpec: {}
    image:
      name: registry.k8s.io/kube-scheduler
      pullPolicy: null
      pullSecrets: []
      tag: v1.30.8
    labels: {}
    logLevel: 4
    nodeSelector: {}
    pdb:
      enabled: true
      maxUnavailable: 1
      minAvailable: null
    pluginConfig:
    - args:
        scoringStrategy:
          resources:
          - name: cpu
            weight: 1
          - name: memory
            weight: 1
          type: MostAllocated
      name: NodeResourcesFit
    plugins:
      score:
        disabled:
        - name: NodeResourcesBalancedAllocation
        - name: NodeAffinity
        - name: InterPodAffinity
        - name: NodeResourcesFit
        - name: ImageLocality
        enabled:
        - name: NodeAffinity
          weight: 14631
        - name: InterPodAffinity
          weight: 1331
        - name: NodeResourcesFit
          weight: 121
        - name: ImageLocality
          weight: 11
    replicas: 2
    resources: {}
    revisionHistoryLimit: null
    serviceAccount:
      annotations: {}
      create: true
      name: null
    tolerations: []
singleuser:
  allowPrivilegeEscalation: false
  cloudMetadata:
    blockWithIptables: false
    ip: 169.254.169.254
  cmd: jupyterhub-singleuser
  cpu:
    guarantee: 0.5
    limit: 1
  defaultUrl: /lab
  events: true
  extraAnnotations: {}
  extraContainers: []
  extraEnv: {}
  extraFiles: {}
  extraLabels:
    hub.jupyter.org/network-access-hub: "true"
  extraNodeAffinity:
    preferred: []
    required: []
  extraPodAffinity:
    preferred: []
    required: []
  extraPodAntiAffinity:
    preferred: []
    required: []
  extraPodConfig:
    securityContext:
      fsGroup: 100
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
  extraResource:
    guarantees: {}
    limits: {}
  extraTolerations: []
  fsGid: 100
  image:
    name: quay.io/jupyterhub/k8s-singleuser-sample
    pullPolicy: null
    pullSecrets: []
    tag: 4.1.0
  initContainers: []
  lifecycleHooks: {}
  memory:
    guarantee: 512M
    limit: 1G
  networkPolicy:
    allowedIngressPorts: []
    egress: []
    egressAllowRules:
      cloudMetadataServer: false
      dnsPortsCloudMetadataServer: true
      dnsPortsKubeSystemNamespace: true
      dnsPortsPrivateIPs: true
      nonPrivateIPs: true
      privateIPs: false
    enabled: false
    ingress: []
    interNamespaceAccessLabels: ignore
  networkTools:
    image:
      name: quay.io/jupyterhub/k8s-network-tools
      pullPolicy: null
      pullSecrets: []
      tag: 4.1.0
    resources: {}
  nodeSelector: {}
  podNameTemplate: null
  profileList: []
  serviceAccountName: null
  startTimeout: 600
  storage:
    capacity: 10Gi
    dynamic:
      pvcNameTemplate: null
      storageAccessModes:
      - ReadWriteOnce
      storageClass: null
      subPath: null
      volumeNameTemplate: volume-{user_server}
    extraLabels: {}
    extraVolumeMounts: []
    extraVolumes: []
    homeMountPath: /home/jovyan
    static:
      pvcName: null
      subPath: '{username}'
    type: none
  uid: 1000